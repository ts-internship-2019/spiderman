
@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

    @*<link href="https://fonts.googleapis.com/css?family=Indie+Flower&display=swap" rel="stylesheet">*@

<style>
    body{
        /*background-image: linear-gradient(to right bottom, #2a0537, #392a64, #3e4f92, #3676c0, #12a0eb);*/
        background-color:#9c27b0;
        box-sizing:border-box;
    }
    input {
        border: 1px solid purple;
        color: white;
        font-size: 18px;
        border-radius: 8px;
        background-color:#2A0537;
        /*background-image: linear-gradient(to right top, #7638d6, #6d55e0, #676ce6, #6980ea, #7192ea, #68a2f1, #65b1f6, #69bff8, #52cffe, #41dfff, #46eefa, #5ffbf1);*/
        text-align: center;
        width:500px;
    }

    label {
        width: 100px;
    }

    input:hover {
        cursor: default;
    }

    input:focus {
        outline: none;
    }

    h1,h3{
        color:white;
    }


    .parent {
        color: white;
        font-size: 22px;
        border-radius:12px;
        /*background-image: linear-gradient(to right top, #7638d6, #6d55e0, #676ce6, #6980ea, #7192ea, #68a2f1, #65b1f6, #69bff8, #52cffe, #41dfff, #46eefa, #5ffbf1);*/
    }
</style>

<h1>Details</h1>
<h3>Tourist Attraction</h3>
<hr style="background:white;"/>


<div class="parent" id="gradient">
    <div class="row highligh mb-2">
        <div class="col-lg-6"><label for="name">Name</label></div>
        <div class="col-lg-6"><input type="text" id="name" name="name" value="Name" readonly="readonly" /></div>
    </div>
    <div class="row highligh mb-2">
        <div class="col-lg-6"> <label for="description">Description</label></div>
        <div class="col-lg-6"><input type="text" id="description" name="description" value="Description" readonly="readonly" /></div>
    </div>
    <div class="row highligh mb-2">
        <div class="col-lg-6"> <label for="longitude">Longitude</label> </div>
        <div class="col-lg-6"> <input type="text" id="longitude" name="longitude" value="Longitude" readonly="readonly" /></div>
    </div>
    <div class="row highligh mb-2">
        <div class="col-lg-6"><label for="latitude">Latitude</label></div>
        <div class="col-lg-6"><input type="text" id="latitude" name="latitude" value="Latitude" readonly="readonly" /></div>
    </div>
    <div class="row highligh mb-2">
        <div class="col-lg-6"><label for="category">Category</label></div>
        <div class="col-lg-6"><input type="text" id="category" name="category" value="Category" readonly="readonly" /></div>
    </div>
    <div class="row highligh mb-2">
        <div class="col-lg-6"><label for="city">City</label></div>
        <div class="col-lg-6"><input type="text" id="city" name="city" value="City" readonly="readonly" /></div>
    </div>
    <div class="row highligh mb-2">
        <div class="col-lg-6"><label for="landmark">Landmark</label></div>
        <div class="col-lg-6"><input type="text" id="landmark" name="landmark" value="Landmark" readonly="readonly" /></div>
    </div>

</div>
<div id="objective-images">
    
</div>


<script>
window.onload=function(){update()}

    function update() {
        var url_string = window.location.href; //window.location.href
        var url = new URL(url_string);
        let id = url.searchParams.get("Id");
        alert("Id-ul este " + id);
        
        if (id !== null) {
            var touristData = {
                Id: id
            }
            $.ajax({
        type: "GET",
        url: "@Url.Action("GetObjectiveDetails", "TouristAttraction")",
        content: "application/json; charset=utf-8",
        dataType: "json",
        //transferEncoding:"chunke",
        data: touristData,
        cache: false,
            success: function (d) {
            if (d.result) {
                console.log(d);
                document.getElementById('name').value = d.result[0].Name;
                document.getElementById('description').value = d.result[0].Description;
                document.getElementById('longitude').value = d.result[0].Longtitudine;
                document.getElementById('latitude').value = d.result[0].Latitudine;
                document.getElementById('category').value = d.result[0].CategoryName;
                document.getElementById('city').value = d.result[0].CityName;
                document.getElementById('landmark').value = d.result[0].LandmarkTypeName;
                console.log("Array length " + d.result[0].Image.length);

                //if (d.result[0].Image.length>0) {
                //    d.result[0].Image.map(img => {
                //        document.getElementById("objective-images").appendChild()
                //    })
                //}
            }
            else {
                alert("Error");
            }
        },
        error: function(xhr, textStatus, errorThrown) {
            // TODO: Show error
        }
    });
        }
        
      
    }
    
</script>

@* Animation script *@
@*<script>
    var colors = new Array(
        [62, 35, 255],
        [60, 255, 60],
        [5, 25, 55],
        [45, 175, 230],
        [18, 84, 97],
        [255, 128, 0]);

    var step = 0;
    //color table indices for:
    // current color left
    // next color left
    // current color right
    // next color right
    var colorIndices = [0, 1, 2, 3];

    //transition speed
    var gradientSpeed = 0.002;

    function updateGradient() {

        if ($ === undefined) return;

        var c0_0 = colors[colorIndices[0]];
        var c0_1 = colors[colorIndices[1]];
        var c1_0 = colors[colorIndices[2]];
        var c1_1 = colors[colorIndices[3]];

        var istep = 1 - step;
        var r1 = Math.round(istep * c0_0[0] + step * c0_1[0]);
        var g1 = Math.round(istep * c0_0[1] + step * c0_1[1]);
        var b1 = Math.round(istep * c0_0[2] + step * c0_1[2]);
        var color1 = "rgb(" + r1 + "," + g1 + "," + b1 + ")";

        var r2 = Math.round(istep * c1_0[0] + step * c1_1[0]);
        var g2 = Math.round(istep * c1_0[1] + step * c1_1[1]);
        var b2 = Math.round(istep * c1_0[2] + step * c1_1[2]);
        var color2 = "rgb(" + r2 + "," + g2 + "," + b2 + ")";

        $('#gradient').css({
            background: "-webkit-gradient(linear, left top, right top, from(" + color1 + "), to(" + color2 + "))"
        }).css({
            background: "-moz-linear-gradient(left, " + color1 + " 0%, " + color2 + " 100%)"
        });

        step += gradientSpeed;
        if (step >= 1) {
            step %= 1;
            colorIndices[0] = colorIndices[1];
            colorIndices[2] = colorIndices[3];

            //pick two new target color indices
            //do not pick the same as the current one
            colorIndices[1] = (colorIndices[1] + Math.floor(1 + Math.random() * (colors.length - 1))) % colors.length;
            colorIndices[3] = (colorIndices[3] + Math.floor(1 + Math.random() * (colors.length - 1))) % colors.length;

        }
    }

    setInterval(updateGradient, 10);
</script>*@