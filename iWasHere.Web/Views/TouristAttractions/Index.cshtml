
@model IEnumerable<iWasHere.Domain.DTOs.TouristAttractionsDTO>
@using Kendo.Mvc.UI
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

        <h1 align="center">Lista Obiective Turistice</h1>
        <br />
        <br />
        <br />
        <span>
            @(Html.Kendo().Button()
                            .Name("textButton")
                            .HtmlAttributes(new { type = "button", style = "width: display:inline" })
                            .Content("<a class = 'ceva' href='/TouristAttractions/CreateEdit'>Adauga</a>")
            )
        </span>

        <span style="float:right;display:inline">
            <label align="right"><b>Filtru nume</b></label>
            <br />
            @(Html.Kendo().MaskedTextBox()
                               .Name("TxtFilterName")
                               .Events(events => events.Change("changeTextBox"))
                               .HtmlAttributes(new { style = "width: 234px; float:right" })
            )
            <br />
            @(Html.Kendo().Button()
                            .Name("iconFilterReset")
                            .Tag("a")
                            .Icon("filter-clear")
                            .Content("Clear Filter")
                          .HtmlAttributes(new { style = " float:right" })
            )
            @(Html.Kendo().Button()
                            .Name("iconFilter")
                            .Tag("a")
                            .Icon("filter")
                            .Content("Filter")
                          .HtmlAttributes(new { style = " float:right" })
            )
        </span>
        <br />
        <br />
        <br />
        <br />
        @(Html.Kendo().Grid<iWasHere.Domain.DTOs.TouristAttractionsDTO>()
                      .Name("GridTouristAttractions")
                      .Columns(columns =>
                      {
                          columns.Bound(c => c.TouristAttractionId).Width(140).Title("Id").Hidden();
                          columns.Bound(c => c.Name).Width(200).Title("Nume");
                          columns.Bound(c => c.Description).Width(200).Title("Descriere");
                          columns.Bound(c => c.CategoryName).Width(200).Title("Nume categorie");
                          columns.Bound(c => c.CityName).Width(150).Title("Nume oras");
                          columns.Bound(c => c.LandmarkName).Width(200).Title("Nume landmark");
                          //columns.Bound(c => c.Longtitudine).Width(200).Title("Longitutine");
                          //columns.Bound(c => c.Latitudine).Width(200).Title("Latitudine");
                          columns.Template("<a class='k-button' style =\"color: blue\" href='/TouristAttractions/CreateEdit?Id=#=TouristAttractionId# '> Editeaza </a>").Width(150);
                          columns.Template("<input class=\"k-button\" type=\"button\" value='Save on Pc' onclick='SaveDownload(#=TouristAttractionId#)'/>").Width(140);
                          columns.Template("<a class='k-button' style =\"color: blue\" href='/TouristAttraction/Details?Id=#=TouristAttractionId# '> Detalii </a>").Width(150);
                          columns.Command(command =>
                          {
                              command.Destroy().Text("Sterge");
                          }).HtmlAttributes(new { style = "width: 60%;color: red;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";" })
                          .Width(150);

                      })
                          .HtmlAttributes(new { style = "height: 500px; width: 100%;" })
                          .Scrollable()
                          .Sortable()
                          .Pageable(pageable => pageable
                              .Refresh(true)
                              .PageSizes(true)
                              .ButtonCount(1))
                          .DataSource(dataSource => dataSource
                              .Ajax()
                              .Read(read => read.Action("TouristAttractionsGrid", "TouristAttractions").Data("FilterByName"))
                              .PageSize(20)
                              .Model(model => model.Id(p => p.TouristAttractionId))
                              .Destroy(update => update.Action("DestroyTouristAttractions", "TouristAttractions"))
                              .Events(events => events.Error("ErrorHandler"))
                              .Update(update => update.Action("UpdateTouristAttractions", "TouristAttractions"))

        )
        )
<script>
    $(document).ready(function () {

            $(iconFilterReset).click(function () {
                document.getElementById('TxtFilterName').value = "";
                $("#GridTouristAttractions").data("kendoGrid").dataSource.read();
                $("#GridTouristAttractions").data("kendoGrid").dataSource.page(1);
            });

            $(iconFilter).click(function () {
                $("#GridTouristAttractions").data("kendoGrid").dataSource.read();
                $("#GridTouristAttractions").data("kendoGrid").dataSource.page(1);
            });
        });
        function FilterByName() {
            return {
                txtFilterName: document.getElementById("TxtFilterName").value
            }
        }
        function ErrorHandler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                alert(message);
            }
        }
        function SaveDownload(TouristAttractionId) {
            debugger;
            window.location.href = "@Url.Action("SaveDataInWord", "TouristAttractions")?Id=" + TouristAttractionId;
        }
        
</script>

<style>
    body {
        /*background-image: linear-gradient(to top, #2a2c2e, #34375c, #722e70, #b60054, #d50000);*/
        /*background-image: linear-gradient(to right bottom, #0f0d0d, #403939, #786969, #b49d9d, #f4d5d5);*/
        background-position: center;
        background-size: cover;
        background-repeat: no-repeat;
        box-sizing: border-box;
        /*background-color: lightyellow;*/
         background-image: url("https://static3.depositphotos.com/1008191/262/i/950/depositphotos_2620824-stock-photo-cream-colored-natural-background.jpg");
      
    }
</style>
