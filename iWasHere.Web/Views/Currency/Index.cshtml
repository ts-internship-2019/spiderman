@using Kendo.Mvc.UI

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Currency</h1>
<div class="demo-section k-content">
    <div>
        <h4>Adauga valuta</h4>
        <p>
            @*//Varianta 1 de buton*@

            @*//Varianta 2 de buton*@
            @(Html.Kendo().Button()
                    .Name("textButton")
                    .HtmlAttributes(new { type = "button" })
                    .Content("Adauga"))
        </p>
    </div>
    <div>
        <h3>Filtre</h3>
        @*<div id="cap-view" class="demo-section k-content">
                <h5>@Html.Label("currency", "Code valuta")</h5>
                @(Html.Kendo().ComboBox()
                      .Name("currencyComboBox")
                      .HtmlAttributes(new { style = "width: 20%" })
                      .Placeholder("Select currency..")
                      .DataTextField("DictionaryItemCode")
                      .DataValueField("Id")
                      .Filter(FilterType.Contains)
                      .DataSource(source => {source.Read(read =>{read.Action("GetJsonCurrencyData", "Currency");});})
                )
            </div>*@
        <button class="k-button k-primary" id="get" style="margin-top: 2em; float: right;">Customize</button>
        <p>
            @(Html.Kendo().Button()
                    .Name("iconTextButton")
                    .Tag("a")
                    .Icon("filter")
                    .Content("Filter"))

            @(Html.Kendo().Button()
                    .Name("kendoIconTextButton")
                    .Tag("a")
                    .Icon("filter-clear")
                    .Content("Clear Filter"))

            @(Html.Kendo().Button()
                    .Name("iconButton")
                    .Tag("em")
                    .Icon("refresh")
                    .Content("<span class='k-icon' title='Refresh'></span>"))
        </p>
    </div>
</div>
<style>
    #cap {
        width: 242px;
        height: 225px;
        margin: 20px auto;
        background-image: url('@Url.Content("~/shared/web/dropdownlist/cap.png")');
        background-repeat: no-repeat;
        background-color: transparent;
    }
    .demo-section p {
        margin: 0 0 30px;
        line-height: 50px;
    }

        .demo-section p .k-button {
            margin: 0 10px 0 0;
        }

    .k-primary {
        min-width: 150px;
    }
</style>
<script>
    function change() {
        var value = $("#currency").val();
        $("#cap")
            .toggleClass("RON", value == 1)
            .toggleClass("USD", value == 2)
            .toggleClass("EUR", value == 3)
            .toggleClass("GBP", value == 4)
            .toggleClass("ESP", value == 5)
            .toggleClass("YEN", value == 6);
    };

    $(document).ready(function () {
        $("#get").click(function () {
            var currency = $("#currency").data("kendoDropDownList"),
                size = $("#size").data("kendoDropDownList");

            alert('Thank you! Your Choice is:\n\nCurrency ID: ' + currency.value() + ' and Size: ' + size.value());
        });
    });
    //take the value from comboBox
    var selectedCombo = $("#currencyComboBox");
    //button filter
    $("iconTextButton").kendoButton();
    var button = $("iconTextButton").data("kendoButton");
    button.bind("click", clearFilter());
    //button clearFilter
    function clearFilter() {
        Console.WriteLine(selectedCombo);
    }
</script>


@(Html.Kendo().Grid<iWasHere.Domain.DTOs.DictionaryCurrencyModel>()
        .Name("Currency")
        .Columns(columns =>
        {
            columns.Bound(c => c.DictionaryItemId).Width(140).Title("Id");
            columns.Bound(c => c.DictionaryItemCode).Width(190).Title("Code");
            columns.Bound(c => c.DictionaryItemName).Width(190).Title("Nume");
            columns.Template(" <input type='button' class='k-button info' name='info' value='Editeaza' method='delete'/> ").Width(74);
            columns.Template(" <input type='button' class='k-button info' name='info' value='Sterge' method='delete' /> ").Width(74);

        })
        .HtmlAttributes(new { style = "height: 380px;" })
        .Scrollable()
        .Groupable()
        .Sortable()

        .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
        .DataSource(dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("DictionaryCurrency", "Currency"))
            .PageSize(20)
        )
)

