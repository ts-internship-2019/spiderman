@using Kendo.Mvc.UI

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<h1>Currency</h1>
<div class="demo-section k-content">
    <div>
        <h6>Adauga valuta</h6>
        <p>
            @(Html.Kendo().Button()
                    .Name("textButton")
                    .HtmlAttributes(new { type = "button", style = "" })
                    .Content("<a class = 'ceva' href='/currency/Add'>Adauga</a>")
                    )
        </p>
    </div>
    <div class="demo-section k-content">
        <h6>Filtru nume</h6>
        @(Html.Kendo().MaskedTextBox()
              .Name("TxtFilterName")
              .Events(events => events.Change("changeTextBox"))
              .HtmlAttributes(new { style = "width: 22%" })
        )
        <p>
            @(Html.Kendo().Button()
                    .Name("iconFilter")
                    .Tag("a")
                    .Icon("filter")
                    .Content("Filter")
            )

            @(Html.Kendo().Button()
                    .Name("iconFilterReset")
                    .Tag("a")
                    .Icon("filter-clear")
                    .Content("Clear Filter"))
        </p>
    </div>
    @(Html.Kendo().Grid<iWasHere.Domain.DTOs.DictionaryCurrencyModel>()
  .Name("GridCurrency")
  .Columns(columns =>
  {
      columns.Bound(c => c.DictionaryItemId).Width(140).Title("Id").Hidden();
      columns.Bound(c => c.DictionaryItemCode).Width(190).Title("Code");
      columns.Bound(c => c.DictionaryItemName).Width(190).Title("Nume");
      columns.Template(" <input type='button' class='k-button info' name='info' value='Editeaza' method='delete'/> ").Width(75);
      columns.Template(" <input type='button' class='k-button info' name='info' value='Sterge' method='delete' /> ").Width(75);

  })
  .HtmlAttributes(new { style = "height: 500px;" })
  .Scrollable()
  .Groupable()
  .Sortable()
  .Pageable(pageable => pageable
      .Refresh(true)
      .PageSizes(true)
      .ButtonCount(1))
  .DataSource(dataSource => dataSource
      .Ajax()
      .Read(read => read.Action("DictionaryCurrency", "Currency").Data("FilterByName"))
      .PageSize(20)
    )
    )
</div>

<style>
    #cap {
        width: 242px;
        height: 225px;
        margin: 20px auto;
        background-image: url('@Url.Content("~/shared/web/dropdownlist/cap.png")');
        background-repeat: no-repeat;
        background-color: transparent;
    }
    .demo-section p {
        margin: 0 0 30px;
        line-height: 50px;
    }

        .demo-section p .k-button {
            margin: 0 10px 0 0;
        }

    .k-primary {
        min-width: 150px;
    }
    .ceva {
    border-color: #9da2a4;
    color: #9da2a4;
    background-color: #fff;
    background-position: 50% 50%;
    }
    a:hover {
    border-color: #9da2a4;
    color: #9da2a4;
    background-color: #fff;
    background-position: 50% 50%;
    }
</style>
<script>
    $(document).ready(function () {

        $(iconFilterReset).click(function () {
            document.getElementById('TxtFilterName').value = "";
            $("#GridCurrency").data("kendoGrid").dataSource.read();
            $("#GridCurrency").data("kendoGrid").dataSource.page(1);
        });

        $(iconFilter).click(function () {
            //alert(document.getElementById("TxtFilterName").value);
            $("#GridCurrency").data("kendoGrid").dataSource.read();
            $("#GridCurrency").data("kendoGrid").dataSource.page(1);
        });
    });
    function FilterByName() {
        //var cId = document.getElementById("TxtFilterName").value;
        //alert(cId);
        return {
            txtFilterName: document.getElementById("TxtFilterName").value
        }
    }
</script>

