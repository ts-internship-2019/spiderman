@model iWasHere.Domain.DTOs.DictionaryCityModel
@{
    ViewData["Title"] = "City";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Orase</h1>
<button onclick="test()" class="k-button k-primary" id="get" style="margin-top: 2em; float: right;">Filtreaza</button>
@(Html.Kendo().Button()
                    .Name("textButton")
                    .HtmlAttributes(new { type = "button" })
                    .Content("<a href='/dictionary/AddCity'>Adauga</span>")
)
<td>
    @Html.ActionLink("Adauga", "Adauga", new { /* id=item.PrimaryKey */ }) |

</td>

<a href="@Url.Action("CreateOrEdit","City",0)" class="btn btn-info"></a>
<p>
    <div class="demo-section k-content">


        <label for="Judet">
            Judet:  @(Html.Kendo().ComboBox()
.Name("counties")
.DataTextField("CountyName")
.DataValueField("CountyId")
.HtmlAttributes(new { style = "width:60%; id='counties'" })
.Filter("StartsWith")
.DataSource(source =>
    {
source.Read(read =>
{
    read.Action("FilterGetCounties", "Dictionary");
})
.ServerFiltering(true);
})
            )


    </div>


</p>



<p>
    <label for="Oras">
        Oras:@(Html.Kendo().TextBox()
.Name("kTextBox").
HtmlAttributes(new { style = "width:150px; font-size:small; display:none id='kTextBox'" })
        )
    </label>
</p>


@(Html.Kendo().Grid<iWasHere.Domain.DTOs.DictionaryCityModel>()
    .Name("grid")
    .Columns(columns =>
    {


        columns.Bound(p => p.CityName).Title("Oras");
        columns.Bound(p => p.CountyName).Title("Judet").Width(130);
        columns.Bound(p => p.CountryName).Title("Tara").Width(130);
        
        columns.Command(command =>
        {
            command.Destroy().Text("Delete");
        });
        columns.Template("<a class='k-button' href='/Dictionary/AddCity?Id=#=CityId# '> Editeaza </a>").Width(150);
       //   columns.Template("<a href='"+@Url.Action("AddCity", "Dictionary")+"?id=#=CityId#' class='btn btn-info'> Modifica</a> ");

    })
    .HtmlAttributes(new { style = "height: 550px; id='grid'" })
    .Scrollable()
    .Groupable()
    .Sortable()
    .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(1))
    .DataSource(dataSource => dataSource
        .Ajax()
        .Read(read => read.Action("CityData", "Dictionary").Data("onAdditionalDataTextBoxCity"))
        .Events(events => events.Error("error_handler"))
           .Model(model => model.Id(p => p.CityId))
           .Destroy(update => update.Action("DeleteCityData", "Dictionary"))


        .PageSize(20)
    )
)



<script>

      function DeleteFilters() {
        $("#kTextBox").val(null);
        $("#counties").data("kendoComboBox").value(null);

 

        $("#grid").data("kendoGrid").dataSource.read();
        $("#grid").data("kendoGrid").dataSource.page(1);
    }


    function test() {
        //onAdditionalDataTextBoxCity()
        // e.preventDefault();``````````````````````
        $("#grid").data("kendoGrid").dataSource.read();
        $("#grid").data("kendoGrid").dataSource.page(1);
    }

    //$("#get").on('click', function (e) {

    //    //onAdditionalDataTextBoxCity()
    //    e.preventDefault();
    //    $("#grid").data("kendoGrid").dataSource.read();
    //    $("#grid").data("kendoGrid").dataSource.page(1);
    //});

    function onAdditionalData() {
        return {
            text: $("#counties").val()
        };
    }
    function filter() {
        var cityName = $("#kTextBox").val()
        //  var countyName = $("#comboBoxId").val()
        var filter = {}
        filter["CityName"] = cityName
        // filter["countyName"] = countyName
        console.log(filter.cityName, filter.countyName)
        return filter
    }
    function onAdditionalDataTextBoxCity() {
        var obj = {}
        obj["city"] = $("#kTextBox").val();
        obj["county"] = $("#counties").data("kendoComboBox").value();
        return obj;
    }


     function error_handler(e) {    
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function() {
                        message += this + "\n";
                    });
                }
            });        
            alert(message);
        }
    }
      function setEdit() {
        getInput = "edit"
        localStorage.setItem("storageName",getInput);
    }
    function cityPage() {


    }

</script>
