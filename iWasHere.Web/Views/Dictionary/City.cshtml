@model iWasHere.Domain.DTOs.DictionaryCityModel
@{
    ViewData["Title"] = "City";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

    <style>
        body{
               background-position: center;
        background-size: cover;
        background-repeat: no-repeat;
        box-sizing: border-box;
         background-image: url("https://static3.depositphotos.com/1008191/262/i/950/depositphotos_2620824-stock-photo-cream-colored-natural-background.jpg");
      
            /*background-image: url("http://www.myfreephotoshop.com/wp-content/uploads/2014/07/11.jpg");
              
            background-color: #cccccc;
            background-size: cover;*/
        }
        .k-content, #grid {
            background-color: lightyellow;
            border-style: solid;
            border-color: darkred;
            border-radius: 15px;
        }
    h2{
            
            color:darkred;
             font-family: 'Courgette', cursive;
            border-radius:12px;
        }

    </style>
        <h2 align="center">Orase</h2>
        <br /><br />
        @(Html.Kendo().Button()
                           .Name("textButton")
                           .HtmlAttributes(new { type = "button", style = "width:200px;", align = "center" })
                           .Content("<a href='/dictionary/AddCity'>Adauga un oras</a>")
        )

        <p></p>

        <label for="Oras">
            Oras:
        </label>
        @(Html.Kendo().TextBox()
            .Name("kTextBox").
            HtmlAttributes(new { style = "width:150px; font-size:small; display:none id='kTextBox'" })
        )
        <label for="Judet">Judet:</label> @(Html.Kendo().ComboBox()
.Name("counties")
.DataTextField("CountyName")
.DataValueField("CountyId")
.HtmlAttributes(new { style = "width:60%; id='counties'" })
.Filter("StartsWith")
.MinLength(1)
.AutoBind(false)
.DataSource(source =>
{
source.Read(read =>
{
read.Action("FilterGetCounties", "Dictionary");
})
.ServerFiltering(true);
})
        )
        <br /><br />

        <p>
            <button onclick="test()" class="btn btn-outline-danger " id="get" style="margin-top: 2em; float: left;font-weight:bold;";>Filtreaza</button>
            <button onclick="deleteFilters()" class="btn btn-outline-danger" id="gett" style="margin-top: 2em; float: right;font-weight:bold;">Sterge filtrele</button>

        </p>
        <br /><br />
 



<p>

</p>

<body>
    @(Html.Kendo().Grid<iWasHere.Domain.DTOs.DictionaryCityModel>()
        .Name("grid")
        .Columns(columns =>
        {


            columns.Bound(p => p.CityName).Title("Oras").Width(150);
            columns.Bound(p => p.CountyName).Title("Judet").Width(130);
            columns.Bound(p => p.CountryName).Title("Tara").Width(150);
            columns.Template("<a class='btn btn-outline-info' href='/Dictionary/AddCity?Id=#=CityId# '> Editeaza </a>").Width(150);
            columns.Command(command =>
            {
                command.Destroy().Text("Delete");
            })
                .HtmlAttributes(new { style = "class = \"btn btn-outline-danger\"" }).Width(150);
            //   columns.Template("<a href='"+@Url.Action("AddCity", "Dictionary")+"?id=#=CityId#' class='btn btn-info'> Modifica</a> ");

        })
        .HtmlAttributes(new { style = "height: 550px; id='grid'" })
        .Scrollable()

            .Sortable()
        .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(1))
        .DataSource(dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("CityData", "Dictionary").Data("onAdditionalDataTextBoxCity"))
            .Events(events => events.Error("error_handler"))
               .Model(model => model.Id(p => p.CityId))
               .Destroy(update => update.Action("DeleteCityData", "Dictionary"))


            .PageSize(20)
        )
    )
</body>


<script>

    function deleteFilters() {
        $("#kTextBox").val(null);
        $("#counties").data("kendoComboBox").value(null);



        $("#grid").data("kendoGrid").dataSource.read();
        $("#grid").data("kendoGrid").dataSource.page(1);
    }


    function test() {
        //onAdditionalDataTextBoxCity()
        // e.preventDefault();``````````````````````
        $("#grid").data("kendoGrid").dataSource.read();
        $("#grid").data("kendoGrid").dataSource.page(1);
    }

    //$("#get").on('click', function (e) {

    //    //onAdditionalDataTextBoxCity()
    //    e.preventDefault();
    //    $("#grid").data("kendoGrid").dataSource.read();
    //    $("#grid").data("kendoGrid").dataSource.page(1);
    //});

    function onAdditionalData() {
        return {
            text: $("#counties").val()
        };
    }
    function filter() {
        var cityName = $("#kTextBox").val()
        //  var countyName = $("#comboBoxId").val()
        var filter = {}
        filter["CityName"] = cityName
        // filter["countyName"] = countyName
        console.log(filter.cityName, filter.countyName)
        return filter
    }
    function onAdditionalDataTextBoxCity() {
        var obj = {}
        obj["city"] = $("#kTextBox").val();
        obj["county"] = $("#counties").data("kendoComboBox").value();
        return obj;
    }


    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
    function setEdit() {
        getInput = "edit"
        localStorage.setItem("storageName", getInput);
    }
    function cityPage() {


    }

</script>

<style>
    body {
        /*background-image: linear-gradient(to top, #2a2c2e, #34375c, #722e70, #b60054, #d50000);*/
        /*background-image: linear-gradient(to right bottom, #0f0d0d, #403939, #786969, #b49d9d, #f4d5d5);*/
        background-position: center;
        background-size: cover;
        background-repeat: no-repeat;
        box-sizing: border-box;
        background-color: lightyellow;
    }
</style>