@model IEnumerable<iWasHere.Domain.DTOs.DictionaryCountryModel>
@{
    ViewData["Title"] = "Country";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Tari</h1>

<hr />



<div class="demo-section k-content">
            
    <div class="filters">
        @(Html.Kendo().TextBox()
         .Name("kTextBox")
         .HtmlAttributes(new { style = "width: 400px;", id = "countryInput" })

        )

        @(Html.Kendo().Button()
           .Name("iconTextButton")
           .Tag("a")
           .Icon("filter")
           .Content("Filtreaza")
           .Events(ev => ev
                    .Click("resetGrid")))

        @(Html.Kendo().Button()
                .Name("kendoIconTextButton")
                .Tag("a")
                .Icon("filter-clear")
                .Content("Sterge Filtre"))

        @(Html.Kendo().Button()
                .Name("iconButton")
                .Tag("em")
                .Icon("refresh")
                .Content("<span class='k-icon' title='Refresh'></span>"))

        <div class="add">
            @(Html.Kendo().Button()
           .Name("textButton")
           .Content("Adauga")
           .HtmlAttributes(new { type = "button" }))

        </div>
    </div>
       
        

</div>



<hr />

@(Html.Kendo().Grid(Model)
       .Name("grid")
       .Columns(columns =>
       {
           columns.Bound(c => c.CountryName).Title("Tara").Width(805).Filterable(false);
           columns.Command(command =>
           {
               command.Edit()
                  .Text("Editeaza")
                  .UpdateText("Edit")
                  .CancelText("Cancel");
               command.Destroy().Text("Sterge");
           }).Width(305);

       })
       .HtmlAttributes(new { style = "height: 550px; width: 1110px;", id = "grid" })
       .Sortable()
       .Pageable()
       .DataSource(dataSource => dataSource
           .Ajax()
           .Read(read => read
                .Action("GetCountryData", "Dictionary")
                .Data("FilterByCountryName"))
           .Events(events => events.Error("error_handler"))
           .PageSize(6)
           .Model(model => model.Id(p => p.CountryId))
           .Destroy(update => update.Action("Process_DestroyCountry", "Dictionary"))
       )
)

<script>
    function FilterByCountryName() {
        var filter = $("#countryInput").val()
        var obj = {}
        obj["abc"] = filter;
        return obj;
    }

    function resetGrid() {
        $('#grid').data('kendoGrid').dataSource.read();
        $('#grid').data('kendoGrid').dataSource.page(1);
    }

    function error_handler(e) {    
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function() {
                        message += this + "\n";
                    });
                }
            });        
            alert(message);
        }
    }
</script>





<style>
    .add {
        float: right;
    }
    .demo-section div {
        margin: 0 0 30px;
        line-height: 50px;
    }

        .demo-section p .k-button {
            margin: 0 10px 0 0;
        }

    .k-primary {
        min-width: 150px;
    }

    .customer-photo {
        display: inline-block;
        width: 32px;
        height: 32px;
        border-radius: 50%;
        background-size: 32px 35px;
        background-position: center center;
        vertical-align: middle;
        line-height: 32px;
        box-shadow: inset 0 0 1px #999, inset 0 0 10px rgba(0,0,0,.2);
        margin-left: 5px;
    }

    .customer-name {
        display: inline-block;
        vertical-align: middle;
        line-height: 32px;
        padding-left: 3px;
    }
</style>

