@model IEnumerable<iWasHere.Domain.DTOs.DictionaryCountryModel>
@{
    ViewData["Title"] = "Tara";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Tari</h1>

<hr />

<div class="demo-section k-content">
            
    <div class="filters">
        @(Html.Kendo().TextBox()
            .Name("kTextBox")
            .HtmlAttributes(new { style = "width: 400px;", id = "countryInput" })

        )

        @(Html.Kendo().Button()
            .Name("iconTextButton")
            .Tag("a")
            .Icon("filter")
            .Content("Filtreaza")
            .Events(ev => ev
                .Click("ResetGrid")))

        @(Html.Kendo().Button()
            .Name("kendoIconTextButton")
            .Tag("a")
            .Icon("filter-clear")
            .Content("Sterge Filtre")
            .Events(evf => evf
                .Click("DeleteFilters")))


        <div class="add">
            @(Html.Kendo().Button()
           .Name("textButton")
           .Tag("a")
           .Content("Adauga")
           .HtmlAttributes(new { type = "button", href = "/Dictionary/AddEditCountry" }))
        </div>
    </div>
        

</div>

<hr />

@(Html.Kendo().Grid(Model)
           .Name("grid")
           .Columns(columns =>
           {
               columns.Bound(c => c.CountryName).Title("Tara").Width(845).Filterable(false);
               columns.Command(command => command
                        .Custom("Edit").Text("Editeaza").Click("GoToAddEditCountry"));
               columns.Command(command => command
                    .Destroy().Text("Sterge")).Width(140);
           })
           .HtmlAttributes(new { style = "height: 550px; width: 1110px;", id = "grid" })
           .Sortable()
           .Pageable()
           .DataSource(dataSource => dataSource
               .Ajax()
               .Read(read => read
                    .Action("GetCountryData", "Dictionary")
                    .Data("FilterByCountryName"))
               .Events(events => events.Error("ErrorHandler"))
               .PageSize(6)
               .Model(model => model.Id(p => p.CountryId))
               .Destroy(update => update.Action("DestroyCountry", "Dictionary"))
               .Update(updated => updated.Action("AddEditCountry", "Grid")) 
       )
)

<script>
    function FilterByCountryName() {
        var filter = $("#countryInput").val()
        var obj = {}
        obj["abc"] = filter;
        return obj;
    }

    function DeleteFilters() {
        $("#countryInput").val(null);
        ResetGrid();
    }

    function ResetGrid() {
        $('#grid').data("kendoGrid").dataSource.read();
        $('#grid').data("kendoGrid").dataSource.page(1);
    }

    function ErrorHandler(e) {    
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function() {
                        message += this + "\n";
                    });
                }
            });        
            alert(message);
        }
    }

    function GoToAddEditCountry() {
        location.href = "/Dictionary/AddEditCountry";
    }
</script>





<style>
    .add {
        float: right;
    }
    .demo-section div {
        margin: 0 0 30px;
        line-height: 50px;
    }

        .demo-section p .k-button {
            margin: 0 10px 0 0;
        }

    .k-primary {
        min-width: 150px;
    }

    .customer-photo {
        display: inline-block;
        width: 32px;
        height: 32px;
        border-radius: 50%;
        background-size: 32px 35px;
        background-position: center center;
        vertical-align: middle;
        line-height: 32px;
        box-shadow: inset 0 0 1px #999, inset 0 0 10px rgba(0,0,0,.2);
        margin-left: 5px;
    }

    .customer-name {
        display: inline-block;
        vertical-align: middle;
        line-height: 32px;
        padding-left: 3px;
    }
</style>

