@model IEnumerable<iWasHere.Domain.DTOs.DictionaryCategoryTypeModel>
@{
    ViewData["Title"] = "Category";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    #addCategory {
        display: block;
        border: 2px solid red;
    }

    #addCategoryInput {
        display: block;
    }

    #addCategory, #addCategoryInput {
        float: right;
    }

    #categoryInput{
        margin-bottom:20px;
    }
    .filterBtn{
        width: 10rem;
    }
    .filterBtnReset{
        display:block;
        margin-bottom:20px;
    }
    h1 {
        margin-top: 20px;
    }
}
</style>

<a href="addcategory" class="button btn btn-outline-danger">Add Category</a>
<br />

<h1>Category</h1>
<input id='categoryInput' type="text" />
<button class="filterBtn btn btn-danger" onclick="resetGrid()">Filter</button>

<button class="filterBtn filterBtnReset btn btn-danger" onclick="resetGrid(); resetFilters()">Clear Filters</button>

@(Html.Kendo().Grid<iWasHere.Domain.DTOs.DictionaryCategoryTypeModel>
    ()
    .Name("Grid")
    .HtmlAttributes(new { style = "id=Grid" })
    .Columns(columns =>
    {
    columns.Bound(o => o.Name);
    columns.Command(command =>
    {    
        command.Destroy().Text("Delete");
    });
    })
    .Sortable()
    .Filterable()
    .Scrollable()
    .Groupable()
    .Pageable(
    pageable => pageable
    .Refresh(true)
    .PageSizes(true)
    .ButtonCount(1)
    )
    .DataSource(dataSource => dataSource
        .Ajax()
        //.PageSize(10)
        .PageSize(20)
        .Events(events => events.Error("ErrorHandler"))
        .Read(read => read.Action("CategoryBinding_Read", "Dictionary").Data("filter"))
        .Model(model => model.Id(p => p.Id))
        .Destroy(update => update.Action("DestroyCategory", "Dictionary"))
    )
)

<script>
    function ErrorHandler(e) {   
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function() {
                        message += this + "\n";
                    });
                }
            });       
            alert(message);
        }
    }

    function filter() {
        var categoryObj = {}
        categoryObj['categoryName'] = $('#categoryInput').val();
        return categoryObj;
    }

    function resetGrid() {
        $('#Grid').data('kendoGrid').dataSource.read();
        $('#Grid').data('kendoGrid').dataSource.page(1);
    }

    function resetFilters() {
        $('#categoryInput').val("");
    }
</script>
