@model IEnumerable<iWasHere.Domain.DTOs.ScheduleTouristAttractionModel>
@{
    ViewData["Title"] = "Schedule";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 style="position:center">Program Vizitare Obiective Turistice</h1>

<hr />



<div class="demo-section k-content">
    <div>
        <p>
            @(Html.Kendo().Button()
                .Name("textButton")
                .Content("Adauga")
                .HtmlAttributes(new { type = "button" })
                 .Content("<a href='/dictionary/AddSchedule'>Adauga</a>"))
        </p>
    </div>

</div>

<p>

    Obiectiv Turistic 
    @(Html.Kendo().TextBox()
         .Name("kTextBox")
         


    )
</p>

<p>

  
    @(Html.Kendo().Button()
            .Name("iconTextButton")
            
            .Tag("a")
            .Icon("filter")
            .Content("Filter"))

    @(Html.Kendo().Button()
            .Name("kendoIconTextButton")
            .Tag("a")
            .Icon("filter-clear")
            .Content("Clear Filter"))

    @(Html.Kendo().Button()
            .Name("iconButton")
            .Tag("em")
            .Icon("refresh")
            .Content("<span class='k-icon' title='Refresh'></span>"))
</p>

<hr />

@(Html.Kendo().Grid<iWasHere.Domain.DTOs.ScheduleTouristAttractionModel>()
       .Name("grid")
       .Columns(columns =>
       {
           columns.Bound(p => p.ScheduleId).Visible(true);
           columns.Bound(p => p.SeasonId).Visible(false);
           columns.Bound(p => p.Season).Title("Sezon").Width(130);
           columns.Bound(p => p.Day).Title("Ziua").Width(130);
           columns.Bound(p => p.StartHour).Title("Ora de inceput").Width(130);
           columns.Bound(p => p.EndHour).Title("Ora inchidere").Width(130);
           columns.Bound(p => p.TouristAttractionName).Title("Obiectiv turistic").Width(130);
            columns.Template("<a class='k-button' href='/Dictionary/AddSchedule?Id=#=ScheduleId# '> Editeaza </a>").Width(150);
           columns.Command(command =>
           {
               command.Destroy().Text("Delete");
           });
          

       })
       .HtmlAttributes(new { style = "height: 550px;" })
       .Scrollable()
       .Groupable()
       .Sortable()
       .Pageable(pageable => pageable
           .Refresh(true)
           .PageSizes(true)

           .ButtonCount(1))
           .DataSource(dataSource => dataSource
           .Ajax()
           .Read(read => read.Action("ScheduleData", "Dictionary").Data("FilterSchedule"))
           .Events(events => events.Error("error_handler"))
            .Model(model => model.Id(p => p.ScheduleId))
            .Destroy(update => update.Action("Process_Destroy", "Dictionary"))


           .PageSize(20)
       )
)

<script>

    $(document).ready(function () {
        $(kendoIconTextButton).click(function () {
            document.getElementById('kTextBox').value = "";
              $("#grid").data("kendoGrid").dataSource.read();
           $("#grid").data("kendoGrid").dataSource.page(1);
        });

     $(iconButton).click(function () {
            //alert(document.getElementById("TxtFilterName").value);
            $("#grid").data("kendoGrid").dataSource.read();
            $("#grid").data("kendoGrid").dataSource.page(1);
        });

        $(iconTextButton).click(function () {

            $("#grid").data("kendoGrid").dataSource.read();
            $("#grid").data("kendoGrid").dataSource.page(1);
        });
    });
    function FilterSchedule() {

        return {
            txtFilterName: document.getElementById("kTextBox").value
        }
    }

  
        function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
            $.each(value.errors, function () {
                message += this + "\n";
            });

        }
    });
    alert(message);
}
}
</script>





<style>
    .demo-section p {
        margin: 0 0 30px;
        line-height: 50px;
    }

        .demo-section p .k-button {
            margin: 0 10px 0 0;
        }

    .k-primary {
        min-width: 150px;
    }

    .customer-photo {
        display: inline-block;
        width: 32px;
        height: 32px;
        border-radius: 50%;
        background-size: 32px 35px;
        background-position: center center;
        vertical-align: middle;
        line-height: 32px;
        box-shadow: inset 0 0 1px #999, inset 0 0 10px rgba(0,0,0,.2);
        margin-left: 5px;
    }

    .customer-name {
        display: inline-block;
        vertical-align: middle;
        line-height: 32px;
        padding-left: 3px;
    }
</style>

